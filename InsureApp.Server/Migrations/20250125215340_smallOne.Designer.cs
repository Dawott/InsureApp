// <auto-generated />
using System;
using InsureApp.Server.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InsureApp.Server.Migrations
{
    [DbContext(typeof(InsuranceDbContext))]
    [Migration("20250125215340_smallOne")]
    partial class smallOne
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InsureApp.Server.Model.EndUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("EndUsers");
                });

            modelBuilder.Entity("InsureApp.Server.Model.InsuranceAgent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Licence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("InsuranceAgents");
                });

            modelBuilder.Entity("InsureApp.Server.Model.InsuranceDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InsuranceReportId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InsuranceReportId");

                    b.ToTable("InsuranceDocuments");
                });

            modelBuilder.Entity("InsureApp.Server.Model.InsuranceReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DecisionReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EndUserId")
                        .HasColumnType("int");

                    b.Property<int?>("InsuranceAgentId")
                        .HasColumnType("int");

                    b.Property<int>("InsuranceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EndUserId");

                    b.HasIndex("InsuranceAgentId");

                    b.HasIndex("InsuranceTypeId");

                    b.ToTable("InsuranceReports");
                });

            modelBuilder.Entity("InsureApp.Server.Model.InsuranceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("InsuranceTypes");
                });

            modelBuilder.Entity("InsureApp.Server.Model.InsuranceDocument", b =>
                {
                    b.HasOne("InsureApp.Server.Model.InsuranceReport", "InsuranceReport")
                        .WithMany("Documents")
                        .HasForeignKey("InsuranceReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InsuranceReport");
                });

            modelBuilder.Entity("InsureApp.Server.Model.InsuranceReport", b =>
                {
                    b.HasOne("InsureApp.Server.Model.EndUser", "EndUser")
                        .WithMany("InsuranceReports")
                        .HasForeignKey("EndUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InsureApp.Server.Model.InsuranceAgent", "InsuranceAgent")
                        .WithMany("HandledReports")
                        .HasForeignKey("InsuranceAgentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("InsureApp.Server.Model.InsuranceType", "InsuranceType")
                        .WithMany("InsuranceReports")
                        .HasForeignKey("InsuranceTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EndUser");

                    b.Navigation("InsuranceAgent");

                    b.Navigation("InsuranceType");
                });

            modelBuilder.Entity("InsureApp.Server.Model.EndUser", b =>
                {
                    b.Navigation("InsuranceReports");
                });

            modelBuilder.Entity("InsureApp.Server.Model.InsuranceAgent", b =>
                {
                    b.Navigation("HandledReports");
                });

            modelBuilder.Entity("InsureApp.Server.Model.InsuranceReport", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("InsureApp.Server.Model.InsuranceType", b =>
                {
                    b.Navigation("InsuranceReports");
                });
#pragma warning restore 612, 618
        }
    }
}
